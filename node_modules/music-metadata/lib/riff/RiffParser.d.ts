import { ITokenParser } from "../ParserFactory";
import * as strtok3 from "strtok3";
import { IOptions, INativeAudioMetadata } from "../";
import { IChunkHeader } from "../aiff/Chunk";
import { Promise } from "es6-promise";
/**
 * Resource Interchange File Format (RIFF) Parser
 *
 * WAVE PCM soundfile format
 *
 * Ref:
 *  http://www.johnloomis.org/cpe102/asgn/asgn1/riff.html
 *  http://soundfile.sapp.org/doc/WaveFormat
 *
 *  ToDo: Split WAVE part from RIFF parser
 */
export declare class WavePcmParser implements ITokenParser {
    private tokenizer;
    private options;
    private metadata;
    private fact;
    /**
     * RIFF/ILIST-INFO tag stored in EXIF
     */
    private riffInfoTags;
    private warnings;
    private blockAlign;
    parse(tokenizer: strtok3.ITokenizer, options: IOptions): Promise<INativeAudioMetadata>;
    parseRiffChunk(): Promise<void>;
    readWaveChunk(): Promise<void>;
    parseListTag(listHeader: IChunkHeader): Promise<void>;
    private parseRiffInfoTags;
}
