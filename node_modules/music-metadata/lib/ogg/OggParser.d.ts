import { ITokenParser } from "../ParserFactory";
import * as strtok3 from "strtok3";
import { INativeAudioMetadata, IOptions } from "../index";
import { Promise } from "es6-promise";
import * as Ogg from "./Ogg";
import * as Token from "token-types";
export declare class SegmentTable implements Token.IGetToken<Ogg.ISegmentTable> {
    private static sum;
    len: number;
    constructor(header: Ogg.IPageHeader);
    get(buf: any, off: any): Ogg.ISegmentTable;
}
/**
 * Parser for Ogg logical bitstream framing
 */
export declare class OggParser implements ITokenParser {
    static getInstance(): OggParser;
    private static Header;
    private tokenizer;
    private header;
    private pageNumber;
    private pageConsumer;
    private options;
    parse(tokenizer: strtok3.ITokenizer, options: IOptions): Promise<INativeAudioMetadata>;
    private parsePage;
}
