/// <reference types="node" />
import { IFormat, INativeAudioMetadata, IOptions, ITag } from "../index";
import * as Ogg from "../ogg/Ogg";
export interface INestedKeyTag {
    key: string;
    value: string;
}
/**
 * Vorbis 1 Parser.
 * Used by OggParser
 */
export declare class VorbisParser implements Ogg.IAudioParser {
    protected options: IOptions;
    protected format: IFormat;
    protected tags: ITag[];
    private pageSegments;
    constructor(options: IOptions);
    /**
     * Vorbis 1 parser
     * @param header Ogg Page Header
     * @param pageData Page data
     */
    parsePage(header: Ogg.IPageHeader, pageData: Buffer): void;
    flush(): void;
    getMetadata(): INativeAudioMetadata;
    /**
     * Parse first Ogg/Vorbis page
     * @param {IPageHeader} header
     * @param {Buffer} pageData
     */
    protected parseFirstPage(header: Ogg.IPageHeader, pageData: Buffer): void;
    protected parseFullPage(pageData: Buffer): void;
    protected calculateDuration(header: Ogg.IPageHeader): void;
    /**
     * Ref: https://xiph.org/vorbis/doc/Vorbis_I_spec.html#x1-840005.2
     * @returns {Promise<number>}
     */
    protected parseUserCommentList(pageData: Buffer, offset: number): void;
    private parseUserComment;
}
