"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var fs = require("fs");
var es6_promise_1 = require("es6-promise");
/**
 * Convert fs functions to promise based functions
 */
var FsPromise = /** @class */ (function () {
    function FsPromise() {
        this.pathExists = fs.existsSync;
        this.createReadStream = fs.createReadStream;
    }
    FsPromise.prototype.close = function (fd) {
        return new es6_promise_1.Promise(function (resolve, reject) {
            fs.close(fd, function (err) {
                if (err)
                    reject(err);
                else
                    resolve();
            });
        });
    };
    FsPromise.prototype.stat = function (path) {
        return new es6_promise_1.Promise(function (resolve, reject) {
            fs.stat(path, function (err, stats) {
                if (err)
                    reject(err);
                else
                    resolve(stats);
            });
        });
    };
    FsPromise.prototype.open = function (path, mode) {
        return new es6_promise_1.Promise(function (resolve, reject) {
            fs.open(path, mode, function (err, fd) {
                if (err)
                    reject(err);
                else
                    resolve(fd);
            });
        });
    };
    FsPromise.prototype.read = function (fd, buffer, offset, length, position) {
        return new es6_promise_1.Promise(function (resolve, reject) {
            fs.read(fd, buffer, offset, length, position, function (err, bytesRead, _buffer) {
                if (err)
                    reject(err);
                else
                    resolve({ bytesRead: bytesRead, buffer: _buffer });
            });
        });
    };
    FsPromise.prototype.writeFile = function (path, data) {
        return new es6_promise_1.Promise(function (resolve, reject) {
            fs.writeFile(path, data, function (err) {
                if (err)
                    reject(err);
                else
                    resolve();
            });
        });
    };
    return FsPromise;
}());
exports.FsPromise = FsPromise;
